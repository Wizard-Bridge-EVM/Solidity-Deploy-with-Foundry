{"path":"src/Contract.sol","targetContract":"WizardBridgeEVM","address":"0x9ab2e175b6329c2bbd9ba7febf95b89a4f3a2988","chainId":11155111,"creationTransaction":"0xdff03b5869e0bed14e4da07d9aac0aff055dc832bc2d168cfdd98c676bc10972","deployer":"0x35648519a2a89532ab534b9f08c5f180d48f1b4b","constructorArguments":"0x0000000000000000000000002170405889a32552c776c9f7b4ae9bcf91d9e8cc00000000000000000000000000000000000000000000000000038d7ea4c68000","storageLayout":{"storage":[{"astId":2357,"contract":"src/Contract.sol:WizardBridgeEVM","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":341,"contract":"src/Contract.sol:WizardBridgeEVM","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":2910,"contract":"src/Contract.sol:WizardBridgeEVM","label":"_paused","offset":0,"slot":"2","type":"t_bool"},{"astId":3902,"contract":"src/Contract.sol:WizardBridgeEVM","label":"_wrappedDetails","offset":0,"slot":"3","type":"t_mapping(t_address,t_struct(WrappedToken)233_storage)"},{"astId":3906,"contract":"src/Contract.sol:WizardBridgeEVM","label":"_tokenToWrapped","offset":0,"slot":"4","type":"t_mapping(t_address,t_address)"},{"astId":3910,"contract":"src/Contract.sol:WizardBridgeEVM","label":"_interfaceTokens","offset":0,"slot":"5","type":"t_array(t_struct(WrappedToken)233_storage)dyn_storage"},{"astId":3914,"contract":"src/Contract.sol:WizardBridgeEVM","label":"_usedTime","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_bool)"},{"astId":3918,"contract":"src/Contract.sol:WizardBridgeEVM","label":"_usedTxns","offset":0,"slot":"7","type":"t_mapping(t_bytes_memory_ptr,t_bool)"},{"astId":3920,"contract":"src/Contract.sol:WizardBridgeEVM","label":"_trustedSigner","offset":0,"slot":"8","type":"t_address"},{"astId":3922,"contract":"src/Contract.sol:WizardBridgeEVM","label":"_serviceFee","offset":0,"slot":"9","type":"t_uint256"},{"astId":3924,"contract":"src/Contract.sol:WizardBridgeEVM","label":"_isValidTx","offset":0,"slot":"10","type":"t_bytes32"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(WrappedToken)233_storage)dyn_storage":{"encoding":"dynamic_array","label":"struct Structs.WrappedToken[]","numberOfBytes":"32","base":"t_struct(WrappedToken)233_storage"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_struct(WrappedToken)233_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Structs.WrappedToken)","numberOfBytes":"32","value":"t_struct(WrappedToken)233_storage"},"t_mapping(t_bytes_memory_ptr,t_bool)":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(WrappedToken)233_storage":{"encoding":"inplace","label":"struct Structs.WrappedToken","numberOfBytes":"128","members":[{"astId":222,"contract":"src/Contract.sol:WizardBridgeEVM","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":224,"contract":"src/Contract.sol:WizardBridgeEVM","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":226,"contract":"src/Contract.sol:WizardBridgeEVM","label":"decimals","offset":0,"slot":"2","type":"t_uint8"},{"astId":228,"contract":"src/Contract.sol:WizardBridgeEVM","label":"wrappedToken","offset":1,"slot":"2","type":"t_address"},{"astId":230,"contract":"src/Contract.sol:WizardBridgeEVM","label":"token","offset":0,"slot":"3","type":"t_address"},{"astId":232,"contract":"src/Contract.sol:WizardBridgeEVM","label":"sourceChain","offset":20,"slot":"3","type":"t_uint32"}]},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}