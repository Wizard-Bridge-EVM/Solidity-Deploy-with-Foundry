{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5666a04e381c03d4b4d46534dfbcc2d1814d9b5ec989ae518fcbc7d832da99364736f6c63430008080033","sourceMap":"10018:11630:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;10018:11630:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5666a04e381c03d4b4d46534dfbcc2d1814d9b5ec989ae518fcbc7d832da99364736f6c63430008080033","sourceMap":"10018:11630:0:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Utils.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":888},\"remappings\":[\":Contract.sol/=src/Contract.sol/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/Utils.sol\":{\"keccak256\":\"0x2b40c01209531d4a10756bf8949f7d6e0dbb242ba32cef307d3b2f482253e241\",\"urls\":[\"bzz-raw://0dc884ecd282dc5b5577cb5621ae070b0606ad862d2f996d93fd72a085e26eb5\",\"dweb:/ipfs/QmSTzzFJzUuPn3JsGeC4ainJ17JMK1MiVpJMa91myor9kv\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.8+commit.dddeac2f"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["Contract.sol/=src/Contract.sol/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":888},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/Utils.sol":"EnumerableSet"},"evmVersion":"london","libraries":{}},"sources":{"src/Utils.sol":{"keccak256":"0x2b40c01209531d4a10756bf8949f7d6e0dbb242ba32cef307d3b2f482253e241","urls":["bzz-raw://0dc884ecd282dc5b5577cb5621ae070b0606ad862d2f996d93fd72a085e26eb5","dweb:/ipfs/QmSTzzFJzUuPn3JsGeC4ainJ17JMK1MiVpJMa91myor9kv"],"license":null}},"version":1},"id":0}